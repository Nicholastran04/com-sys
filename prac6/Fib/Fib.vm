// Contains a function Fib.fib that calculates and returns the nth Fibonacci number recursively
// n is supplied as an argument

function Fib.fib 0

// Handle case when n < 0: return 0
push argument 0
push constant 0
lt
if-goto NEG

// Base cases
// if n == 0, return 0
push argument 0
push constant 0
eq
if-goto BASE_CASE_0

// if n == 1, return 1
push argument 0
push constant 1
eq
if-goto BASE_CASE_1

// Recursive case:
// Fib.fib(n-1) + Fib.fib(n-2)

// n-1
push argument 0
push constant 1
sub
call Fib.fib 1

// n-2
push argument 0
push constant 2
sub
call Fib.fib 1

// Fib(n-1) + Fib(n-2)
add
return

label NEG
push constant 0
return

label BASE_CASE_0
push constant 0
return

label BASE_CASE_1
push constant 1
return